{"version":3,"file":"preload.js","sources":["D:/project/electron_quick/plugins/events.js","D:/project/electron_quick/preload/index.js"],"sourcesContent":["\r\nimport { ipcMain, ipcRenderer, BrowserWindow } from 'electron';\r\nimport { EventEmitter, once, getEventListeners } from 'node:events';\r\n\r\nconst courseReg = /^(?<course>[a-zA-Z\\d]+):(?<name>[a-zA-Z\\d]+)$/;\r\nconst aliasCourseReg = /^(?<course>[#$@]):(?<name>[a-zA-Z\\d]+)$/;\r\nconst currentCourseReg = /^:(?<name>[a-zA-Z\\d]+)$/;\r\nconst allCourseReg = /^(?<name>[a-zA-Z\\d]+)$/;\r\n\r\n// console.log(once, getEventListeners)\r\n\r\nconst courseAlias = {\r\n  \"$\": 'mainWindow',\r\n  // \"@\": 'all',\r\n  \"#\": 'main'\r\n}\r\n\r\nfunction generateCourse(eventName){\r\n  let course, name;\r\n  if(eventName.match(courseReg)){\r\n    const r = eventName.match(courseReg);\r\n    course = r.groups.course\r\n    name = r.groups.name\r\n  } else if(eventName.match(aliasCourseReg)) {\r\n    const r = eventName.match(aliasCourseReg);\r\n    course =  courseAlias[r.groups.course] ?? r.groups.course\r\n    name = r.groups.name\r\n  } else if(eventName.match(currentCourseReg)){\r\n    const r = eventName.match(currentCourseReg);\r\n    course =  'current'\r\n    name = r.groups.name\r\n  } else if(eventName.match(allCourseReg)){\r\n    const r = eventName.match(allCourseReg);\r\n    course = 'all'\r\n    name = r.groups.name\r\n  } else {\r\n    course = 'current'\r\n    name = eventName\r\n  }\r\n  return({\r\n    course, name\r\n  })\r\n}\r\n\r\n\r\n\r\nclass Events{\r\n  #instance = new EventEmitter();\r\n\r\n  #initEventPipe(){\r\n    if(process.type === 'renderer'){\r\n      ipcRenderer.on(\"__eventPipe\", (e, {eventName, args}) => {\r\n        this.#instance.emit(eventName, args)\r\n      })\r\n    } else if( process.type === 'browser'){\r\n      ipcMain.on('__eventPipe', (e, { eventName, type, args, ...data }) => {\r\n        switch(type){\r\n          // 直发发主进程\r\n          case 'direct':\r\n            this.#instance.emit(eventName, args);\r\n            break;\r\n          // 转发\r\n          case 'transpond':\r\n            const wins = getWin(data.winName);\r\n            wins.forEach((win) => this.#emitToRender(win, { eventName, args}))\r\n            break;\r\n          // 广播\r\n          case 'broadcast':\r\n            // 主进程\r\n            this.#instance.emit(eventName, args);\r\n            // 除发送的进程以外的所有进程\r\n            BrowserWindow.getAllWindows().forEach((win) => {\r\n              if(win.webContents.id !== e.sender.id){\r\n                this.#emitToRender(win, { eventName, args })\r\n              }\r\n            })\r\n            break;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  #emitToMain(params){\r\n    ipcRenderer.send('__eventPipe', params)\r\n  }\r\n\r\n  #emitToRender(win, params){\r\n    win.webContents.send('__eventPipe', params)\r\n  }\r\n\r\n  constructor(){\r\n    this.#initEventPipe();\r\n    if(process.type === 'renderer'){\r\n      this.on = this.on.bind(this)\r\n      this.emit = this.emit.bind(this)\r\n      this.off = this.off.bind(this)\r\n    }\r\n  }\r\n\r\n  on(eventName, callback){\r\n    const currentProcess = getCurrentWinName();\r\n    const { course, name } = generateCourse(eventName);\r\n    const _eventName = course === 'current' \r\n      ? `${currentProcess}_${name}` \r\n      : `${course}_${name}`;\r\n    this.#instance.on(_eventName, callback);\r\n  }\r\n\r\n  emit(eventName, args){\r\n    let { course, name } = generateCourse(eventName);\r\n    const currentProcess = getCurrentWinName();\r\n    if(course === currentProcess){\r\n      course = 'current'\r\n    }\r\n\r\n    const _eventName = course === 'all' \r\n      ? `${course}_${name}`\r\n      : `${currentProcess}_${name}`;\r\n\r\n    switch(course){\r\n      case 'main':\r\n        if(process.type === 'renderer'){\r\n          this.#emitToMain({ \r\n            eventName: _eventName, \r\n            type: 'direct',\r\n            args \r\n          })\r\n        }\r\n        break;\r\n      case 'all':\r\n        if(process.type === 'renderer'){\r\n          // 触发当前窗口\r\n          this.#instance.emit(_eventName, args);\r\n          // 触发到主进程并广播到其他窗口\r\n          this.#emitToMain({ \r\n            eventName: _eventName, \r\n            type: 'broadcast',\r\n            args\r\n          })\r\n        } else {\r\n          // 主进程的\r\n          this.#instance.emit(_eventName, args);\r\n          // 所有窗口\r\n          BrowserWindow.getAllWindows().forEach((win) => {\r\n            this.#emitToRender(win, { eventName: _eventName, args })\r\n          })\r\n        }\r\n        break;\r\n      case 'current':\r\n        this.#instance.emit(`${currentProcess}_${name}`, args);\r\n        break;\r\n      default:\r\n        if(process.type === 'renderer'){\r\n          this.#emitToMain({ \r\n            eventName: _eventName, \r\n            type: 'transpond',\r\n            winName: course,\r\n            args,\r\n          })\r\n        } else {\r\n          const wins = getWin(course)\r\n          wins.forEach((win) => this.#emitToRender(win, { eventName: _eventName, args}));\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  off(eventName){\r\n    const { course, name } = generateCourse(eventName);\r\n    const _eventName = course === 'all' ? `${course}_${name}` : name;\r\n    this.#instance.removeListener(_eventName);\r\n  }\r\n}\r\n\r\nexport default new Events()\r\n\r\nexport const browserMap = new Map();\r\n\r\nexport function createWindow(createWin, winName){\r\n  const win = createWin(winName);\r\n\r\n  if(!browserMap.has(winName)){\r\n    const browserSet = new Set();\r\n    browserSet.add(win)\r\n    browserMap.set(winName, browserSet)\r\n  } else {\r\n    const browserSet = browserMap.get(winName)\r\n    browserSet.add(win)\r\n  }\r\n\r\n  win.on('closed', () => {\r\n    const browserSet = browserMap.get(winName)\r\n    browserSet.delete(win)\r\n  })\r\n  return win;\r\n}\r\n\r\nfunction getWin(name){\r\n  if(name){\r\n    const browserSet = browserMap.get(name)\r\n    return browserSet\r\n  } else {\r\n    return Array.from(browserMap.entries()).reduce((prev, [winName, browserSet]) => {\r\n      return {\r\n        ...prev,\r\n        [winName]: browserSet\r\n      }\r\n    }, {})\r\n  }\r\n}\r\n\r\n\r\nexport function getCurrentWinName(){\r\n  if(process.type === 'browser'){\r\n    return 'main'\r\n  } else {\r\n    const key = 'currentwinName='\r\n    for(let arg of process.argv){\r\n      if(arg.startsWith(key)){\r\n        return arg.replace(key, '')\r\n      }\r\n    }\r\n  }\r\n}","import { contextBridge } from \"electron\";\r\nimport events from '../plugins/events.js';\r\n// import events from '../plugins/events/dist/preload.js'\r\nconsole.log('hello render.js')\r\n\r\ncontextBridge.exposeInMainWorld('electron', {\r\n  chrome: () => process.versions.chrome,\r\n  node: () => process.versions.node,\r\n  electron: () => process.versions.electron,\r\n  events\r\n})\r\n\r\n"],"names":["EventEmitter","ipcRenderer","ipcMain","BrowserWindow","contextBridge"],"mappings":"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"}